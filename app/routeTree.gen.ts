/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthResetPasswordImport } from './routes/auth/reset-password'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgetPasswordImport } from './routes/auth/forget-password'
import { Route as AuthVerifyEmailIndexImport } from './routes/auth/verify-email/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AppUsersIndexImport } from './routes/app/users/index'
import { Route as AppPostsIndexImport } from './routes/app/posts/index'
import { Route as AppHomeIndexImport } from './routes/app/home/index'
import { Route as AuthVerifyEmailStatusImport } from './routes/auth/verify-email/$status'
import { Route as AuthRegisterSuccessImport } from './routes/auth/register/success'
import { Route as AppUsersIdIndexImport } from './routes/app/users/$id/index'
import { Route as AppPostsIdIndexImport } from './routes/app/posts/$id/index'
import { Route as AppUsersIdEditImport } from './routes/app/users/$id/edit'
import { Route as AppPostsIdEditImport } from './routes/app/posts/$id/edit'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgetPasswordRoute = AuthForgetPasswordImport.update({
  id: '/forget-password',
  path: '/forget-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthVerifyEmailIndexRoute = AuthVerifyEmailIndexImport.update({
  id: '/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppUsersIndexRoute = AppUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppPostsIndexRoute = AppPostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppHomeIndexRoute = AppHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AuthVerifyEmailStatusRoute = AuthVerifyEmailStatusImport.update({
  id: '/verify-email/$status',
  path: '/verify-email/$status',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterSuccessRoute = AuthRegisterSuccessImport.update({
  id: '/register/success',
  path: '/register/success',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppUsersIdIndexRoute = AppUsersIdIndexImport.update({
  id: '/users/$id/',
  path: '/users/$id/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppPostsIdIndexRoute = AppPostsIdIndexImport.update({
  id: '/posts/$id/',
  path: '/posts/$id/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppUsersIdEditRoute = AppUsersIdEditImport.update({
  id: '/users/$id/edit',
  path: '/users/$id/edit',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppPostsIdEditRoute = AppPostsIdEditImport.update({
  id: '/posts/$id/edit',
  path: '/posts/$id/edit',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/forget-password': {
      id: '/auth/forget-password'
      path: '/forget-password'
      fullPath: '/auth/forget-password'
      preLoaderRoute: typeof AuthForgetPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/register/success': {
      id: '/auth/register/success'
      path: '/register/success'
      fullPath: '/auth/register/success'
      preLoaderRoute: typeof AuthRegisterSuccessImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/verify-email/$status': {
      id: '/auth/verify-email/$status'
      path: '/verify-email/$status'
      fullPath: '/auth/verify-email/$status'
      preLoaderRoute: typeof AuthVerifyEmailStatusImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/home/': {
      id: '/app/home/'
      path: '/home'
      fullPath: '/app/home'
      preLoaderRoute: typeof AppHomeIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/posts/': {
      id: '/app/posts/'
      path: '/posts'
      fullPath: '/app/posts'
      preLoaderRoute: typeof AppPostsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/users/': {
      id: '/app/users/'
      path: '/users'
      fullPath: '/app/users'
      preLoaderRoute: typeof AppUsersIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/verify-email/': {
      id: '/auth/verify-email/'
      path: '/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/app/posts/$id/edit': {
      id: '/app/posts/$id/edit'
      path: '/posts/$id/edit'
      fullPath: '/app/posts/$id/edit'
      preLoaderRoute: typeof AppPostsIdEditImport
      parentRoute: typeof AppRouteImport
    }
    '/app/users/$id/edit': {
      id: '/app/users/$id/edit'
      path: '/users/$id/edit'
      fullPath: '/app/users/$id/edit'
      preLoaderRoute: typeof AppUsersIdEditImport
      parentRoute: typeof AppRouteImport
    }
    '/app/posts/$id/': {
      id: '/app/posts/$id/'
      path: '/posts/$id'
      fullPath: '/app/posts/$id'
      preLoaderRoute: typeof AppPostsIdIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/users/$id/': {
      id: '/app/users/$id/'
      path: '/users/$id'
      fullPath: '/app/users/$id'
      preLoaderRoute: typeof AppUsersIdIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppHomeIndexRoute: typeof AppHomeIndexRoute
  AppPostsIndexRoute: typeof AppPostsIndexRoute
  AppUsersIndexRoute: typeof AppUsersIndexRoute
  AppPostsIdEditRoute: typeof AppPostsIdEditRoute
  AppUsersIdEditRoute: typeof AppUsersIdEditRoute
  AppPostsIdIndexRoute: typeof AppPostsIdIndexRoute
  AppUsersIdIndexRoute: typeof AppUsersIdIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppHomeIndexRoute: AppHomeIndexRoute,
  AppPostsIndexRoute: AppPostsIndexRoute,
  AppUsersIndexRoute: AppUsersIndexRoute,
  AppPostsIdEditRoute: AppPostsIdEditRoute,
  AppUsersIdEditRoute: AppUsersIdEditRoute,
  AppPostsIdIndexRoute: AppPostsIdIndexRoute,
  AppUsersIdIndexRoute: AppUsersIdIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthForgetPasswordRoute: typeof AuthForgetPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthRegisterSuccessRoute: typeof AuthRegisterSuccessRoute
  AuthVerifyEmailStatusRoute: typeof AuthVerifyEmailStatusRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthVerifyEmailIndexRoute: typeof AuthVerifyEmailIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgetPasswordRoute: AuthForgetPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthRegisterSuccessRoute: AuthRegisterSuccessRoute,
  AuthVerifyEmailStatusRoute: AuthVerifyEmailStatusRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthVerifyEmailIndexRoute: AuthVerifyEmailIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forget-password': typeof AuthForgetPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/register/success': typeof AuthRegisterSuccessRoute
  '/auth/verify-email/$status': typeof AuthVerifyEmailStatusRoute
  '/app/home': typeof AppHomeIndexRoute
  '/app/posts': typeof AppPostsIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
  '/app/posts/$id/edit': typeof AppPostsIdEditRoute
  '/app/users/$id/edit': typeof AppUsersIdEditRoute
  '/app/posts/$id': typeof AppPostsIdIndexRoute
  '/app/users/$id': typeof AppUsersIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forget-password': typeof AuthForgetPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/register/success': typeof AuthRegisterSuccessRoute
  '/auth/verify-email/$status': typeof AuthVerifyEmailStatusRoute
  '/app/home': typeof AppHomeIndexRoute
  '/app/posts': typeof AppPostsIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
  '/app/posts/$id/edit': typeof AppPostsIdEditRoute
  '/app/users/$id/edit': typeof AppUsersIdEditRoute
  '/app/posts/$id': typeof AppPostsIdIndexRoute
  '/app/users/$id': typeof AppUsersIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/forget-password': typeof AuthForgetPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/register/success': typeof AuthRegisterSuccessRoute
  '/auth/verify-email/$status': typeof AuthVerifyEmailStatusRoute
  '/app/home/': typeof AppHomeIndexRoute
  '/app/posts/': typeof AppPostsIndexRoute
  '/app/users/': typeof AppUsersIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/auth/verify-email/': typeof AuthVerifyEmailIndexRoute
  '/app/posts/$id/edit': typeof AppPostsIdEditRoute
  '/app/users/$id/edit': typeof AppUsersIdEditRoute
  '/app/posts/$id/': typeof AppPostsIdIndexRoute
  '/app/users/$id/': typeof AppUsersIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/auth/forget-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/register/success'
    | '/auth/verify-email/$status'
    | '/app/home'
    | '/app/posts'
    | '/app/users'
    | '/auth/register'
    | '/auth/verify-email'
    | '/app/posts/$id/edit'
    | '/app/users/$id/edit'
    | '/app/posts/$id'
    | '/app/users/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth'
    | '/auth/forget-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/register/success'
    | '/auth/verify-email/$status'
    | '/app/home'
    | '/app/posts'
    | '/app/users'
    | '/auth/register'
    | '/auth/verify-email'
    | '/app/posts/$id/edit'
    | '/app/users/$id/edit'
    | '/app/posts/$id'
    | '/app/users/$id'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/auth/forget-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/register/success'
    | '/auth/verify-email/$status'
    | '/app/home/'
    | '/app/posts/'
    | '/app/users/'
    | '/auth/register/'
    | '/auth/verify-email/'
    | '/app/posts/$id/edit'
    | '/app/users/$id/edit'
    | '/app/posts/$id/'
    | '/app/users/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/home/",
        "/app/posts/",
        "/app/users/",
        "/app/posts/$id/edit",
        "/app/users/$id/edit",
        "/app/posts/$id/",
        "/app/users/$id/"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/forget-password",
        "/auth/login",
        "/auth/reset-password",
        "/auth/register/success",
        "/auth/verify-email/$status",
        "/auth/register/",
        "/auth/verify-email/"
      ]
    },
    "/auth/forget-password": {
      "filePath": "auth/forget-password.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx",
      "parent": "/auth"
    },
    "/auth/register/success": {
      "filePath": "auth/register/success.tsx",
      "parent": "/auth"
    },
    "/auth/verify-email/$status": {
      "filePath": "auth/verify-email/$status.tsx",
      "parent": "/auth"
    },
    "/app/home/": {
      "filePath": "app/home/index.tsx",
      "parent": "/app"
    },
    "/app/posts/": {
      "filePath": "app/posts/index.tsx",
      "parent": "/app"
    },
    "/app/users/": {
      "filePath": "app/users/index.tsx",
      "parent": "/app"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx",
      "parent": "/auth"
    },
    "/auth/verify-email/": {
      "filePath": "auth/verify-email/index.tsx",
      "parent": "/auth"
    },
    "/app/posts/$id/edit": {
      "filePath": "app/posts/$id/edit.tsx",
      "parent": "/app"
    },
    "/app/users/$id/edit": {
      "filePath": "app/users/$id/edit.tsx",
      "parent": "/app"
    },
    "/app/posts/$id/": {
      "filePath": "app/posts/$id/index.tsx",
      "parent": "/app"
    },
    "/app/users/$id/": {
      "filePath": "app/users/$id/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
